---
networks:
  base-nodejs-network:
    driver: bridge

volumes:
  dev-db-data:

services:
  # ---------------------------------------------------------------------
  # | Node.js API Service                                               | 
  # ---------------------------------------------------------------------
  nodejs-api-service:
    build:
      context: ../../../
      dockerfile: .${API_PROJECT_PATH}/Dockerfile.dev
      args:
        - API_PROJECT_PATH=${API_PROJECT_PATH}
        - NODE_PORT=${NODE_PORT}
    ports:
      - "3000:${NODE_PORT}"
    depends_on:
      - postgresql_database
    env_file:
      - ../../configuration/env/.${PROJECT_NAME}.compose.env
    volumes:
      - /usr/src/app/node_modules # Avoids overwriting node_modules with local volume
      - ../../../${API_PROJECT_PATH}:/usr/src/app
    networks:
      - base-nodejs-network

  # ---------------------------------------------------------------------
  # | Postgres Database                                                 |
  # ---------------------------------------------------------------------
  postgresql_database:
    image: postgres:13-alpine
    env_file:
      - ../../configuration/env/.${PROJECT_NAME}.compose.env
    ports:
      - "5432:5432"
    volumes:
      - dev-db-data:/var/lib/postgresql/data
      - ../../../database/initialization/${PROJECT_NAME}-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - base-nodejs-network

  # ---------------------------------------------------------------------
  # | Database Seeder                                                   |
  # ---------------------------------------------------------------------
  database-seeder:
    build:
      context: ../../../
      dockerfile: ./database/db-admin/seeder/postgresql/Dockerfile.dev
      args:
        - PROJECT_NAME=${PROJECT_NAME}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - ../../configuration/env/.${PROJECT_NAME}.compose.env
    depends_on:
      - postgresql_database
    networks:
      - base-nodejs-network

  # ---------------------------------------------------------------------
  # | PgAdmin                                                           |
  # ---------------------------------------------------------------------
  pgadmin:
    image:
      dpage/pgadmin4
    # ensure that the CONTAINER user id and group id are the same as the HOST user id and group id
    # without this, the container will fail to write files to the host volume
    # user: "${HOST_USER_ID}:${HOST_GROUP_ID}"
    ports:
      - 15433:80
    env_file:
      - ../../configuration/env/.${PROJECT_NAME}.compose.env
    depends_on:
      - postgresql_database
    networks:
      - base-nodejs-network
    volumes:
      # - ../../../database/.tmp-data/${PROJECT_NAME}-data/:/var/lib/pgadmin/
      - ../../../database/db-admin/pgAdmin/config_distro.py:/pgadmin4/config_distro.py
      - ../../../database/db-admin/pgAdmin/servers.json:/pgadmin4/servers.json